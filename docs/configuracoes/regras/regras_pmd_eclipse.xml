<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ruleset xmlns="http://pmd.sf.net/ruleset/1.0.0" name="teste" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd" xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd">
   <description>PMD Plugin preferences rule set</description>
   <rule ref="rulesets/typeresolution.xml/LooseCoupling"/>
   <rule ref="rulesets/typeresolution.xml/CloneMethodMustImplementCloneable">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/typeresolution.xml/UnusedImports">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/typeresolution.xml/SignatureDeclareThrowsException"/>
   <rule ref="rulesets/braces.xml/IfStmtsMustUseBraces">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/braces.xml/WhileLoopsMustUseBraces">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/braces.xml/IfElseStmtsMustUseBraces">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/braces.xml/ForLoopsMustUseBraces">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/design.xml/UseSingleton"/>
   <rule ref="rulesets/design.xml/SimplifyBooleanReturns"/>
   <rule ref="rulesets/design.xml/SimplifyBooleanExpressions">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/design.xml/SwitchStmtsShouldHaveDefault"/>
   <rule ref="rulesets/design.xml/AvoidDeeplyNestedIfStmts"/>
   <rule ref="rulesets/design.xml/AvoidReassigningParameters"/>
   <rule ref="rulesets/design.xml/SwitchDensity"/>
   <rule ref="rulesets/design.xml/ConstructorCallsOverridableMethod"/>
   <rule ref="rulesets/design.xml/AccessorClassGeneration"/>
   <rule ref="rulesets/design.xml/FinalFieldCouldBeStatic"/>
   <rule ref="rulesets/design.xml/CloseResource"/>
  <rule ref="rulesets/design.xml/NonStaticInitializer">
   <priority>2</priority>
   </rule>
   <rule ref="rulesets/design.xml/DefaultLabelNotLastInSwitchStmt">
   <priority>2</priority>
   </rule>
   <rule ref="rulesets/design.xml/NonCaseLabelInSwitchStatement">
    <priority>2</priority>
   </rule>
   <rule ref="rulesets/design.xml/OptimizableToArrayCall">
    <priority>2</priority>
   </rule>
   <rule ref="rulesets/design.xml/BadComparison">
    <priority>2</priority>
   </rule>
   <rule ref="rulesets/design.xml/EqualsNull">
    <priority>1</priority>
   </rule>
   <rule ref="rulesets/design.xml/ConfusingTernary">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/design.xml/InstantiationToGetClass"/>
   <rule ref="rulesets/design.xml/IdempotentOperations"/>
   <rule ref="rulesets/design.xml/SimpleDateFormatNeedsLocale"/>
   <rule ref="rulesets/design.xml/ImmutableField"/>
   <rule ref="rulesets/design.xml/UseLocaleWithCaseConversions"/>
   <rule ref="rulesets/design.xml/AvoidProtectedFieldInFinalClass"/>
   <rule ref="rulesets/design.xml/AssignmentToNonFinalStatic"/>
   <rule ref="rulesets/design.xml/MissingStaticMethodInNonInstantiatableClass"/>
   <rule ref="rulesets/design.xml/AvoidSynchronizedAtMethodLevel"/>
   <rule ref="rulesets/design.xml/MissingBreakInSwitch"/>
   <rule ref="rulesets/design.xml/UseNotifyAllInsteadOfNotify"/>
   <rule ref="rulesets/design.xml/AvoidInstanceofChecksInCatchClause"/>
   <rule ref="rulesets/design.xml/AbstractClassWithoutAbstractMethod"/>
   <rule ref="rulesets/design.xml/SimplifyConditional"/>
   <rule ref="rulesets/design.xml/CompareObjectsWithEquals"/>
   <rule ref="rulesets/design.xml/PositionLiteralsFirstInComparisons"/>
   <rule ref="rulesets/design.xml/UnnecessaryLocalBeforeReturn"/>
   <rule ref="rulesets/design.xml/NonThreadSafeSingleton"/>
   <rule ref="rulesets/design.xml/UncommentedEmptyMethod"/>
   <rule ref="rulesets/design.xml/UncommentedEmptyConstructor"/>
   <rule ref="rulesets/design.xml/AvoidConstantsInterface"/>
   <rule ref="rulesets/design.xml/UnsynchronizedStaticDateFormatter">
   <priority>5</priority>
   </rule>
   <rule ref="rulesets/design.xml/PreserveStackTrace"/>
   <rule ref="rulesets/design.xml/UseCollectionIsEmpty"/>
   <rule ref="rulesets/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal"/>
   <rule ref="rulesets/design.xml/EmptyMethodInAbstractClassShouldBeAbstract"/>
   <rule ref="rulesets/design.xml/SingularField"/>
   <rule ref="rulesets/design.xml/ReturnEmptyArrayRatherThanNull"/>
   <rule ref="rulesets/design.xml/AbstractClassWithoutAnyMethod"/>
   <rule ref="rulesets/design.xml/TooFewBranchesForASwitchStatement"/>
   <rule ref="rulesets/strictexception.xml/AvoidCatchingThrowable">
    <priority>2</priority>
   </rule>
   <rule ref="rulesets/strictexception.xml/SignatureDeclareThrowsException">
    <priority>2</priority>
   </rule>
   <rule ref="rulesets/strictexception.xml/ExceptionAsFlowControl">
    <priority>2</priority>
   </rule>
   <rule ref="rulesets/strictexception.xml/AvoidCatchingNPE">
   <priority>2</priority>
   </rule>
   <rule ref="rulesets/strictexception.xml/AvoidThrowingRawExceptionTypes">
   <priority>1</priority>
   </rule>
   <rule ref="rulesets/strictexception.xml/AvoidThrowingNullPointerException">
   <priority>1</priority>
   </rule>
   <rule ref="rulesets/strictexception.xml/AvoidRethrowingException"/>
   <rule ref="rulesets/strictexception.xml/DoNotExtendJavaLangError"/>
   <rule ref="rulesets/strictexception.xml/DoNotThrowExceptionInFinally"/>
   <rule ref="rulesets/strictexception.xml/AvoidThrowingNewInstanceOfSameException"/>
   <rule ref="rulesets/unusedcode.xml/UnusedPrivateField">
   <priority>1</priority>
   </rule>
   <rule ref="rulesets/unusedcode.xml/UnusedLocalVariable">
   <priority>1</priority>
   </rule>
   <rule ref="rulesets/unusedcode.xml/UnusedPrivateMethod">
   <priority>1</priority>
   </rule>
   <rule ref="rulesets/unusedcode.xml/UnusedFormalParameter">
   <priority>1</priority>
   </rule>
   <rule ref="rulesets/logging-java.xml/MoreThanOneLogger"/>
   <rule ref="rulesets/logging-java.xml/LoggerIsNotStaticFinal"/>
   <rule ref="rulesets/logging-java.xml/SystemPrintln"/>
   <rule ref="rulesets/logging-java.xml/AvoidPrintStackTrace"/>
   <rule ref="rulesets/strings.xml/AvoidDuplicateLiterals">
   <priority>2</priority>
   </rule>
   <rule ref="rulesets/strings.xml/StringInstantiation">
	<priority>2</priority>
   </rule>
   <rule ref="rulesets/strings.xml/StringToString">
   <priority>2</priority>
   </rule>
   <rule ref="rulesets/strings.xml/InefficientStringBuffering"/>
   <rule ref="rulesets/strings.xml/UnnecessaryCaseChange">
   <priority>2</priority>
   </rule>
   <rule ref="rulesets/strings.xml/UseStringBufferLength">
   <priority>2</priority>
   </rule>
   <rule ref="rulesets/strings.xml/AppendCharacterWithChar">
    <priority>2</priority>
   </rule>
   <rule ref="rulesets/strings.xml/ConsecutiveLiteralAppends">
   <priority>2</priority>
   <properties>
            <property name="threshold" value="300"/>
        </properties>
	</rule>
  <rule ref="rulesets/strings.xml/UseIndexOfChar">
   <priority>2</priority>
   </rule>
   <rule ref="rulesets/strings.xml/InefficientEmptyStringCheck"/>
   <rule ref="rulesets/strings.xml/InsufficientStringBufferDeclaration"/>
   <rule ref="rulesets/strings.xml/UselessStringValueOf"/>
   <rule ref="rulesets/strings.xml/StringBufferInstantiationWithChar"/>
   <rule ref="rulesets/strings.xml/UseEqualsToCompareStrings"/>
   <rule ref="rulesets/strings.xml/AvoidStringBufferField"/>
   <rule ref="rulesets/migrating.xml/ReplaceVectorWithList"/>
   <rule ref="rulesets/migrating.xml/ReplaceHashtableWithMap"/>
   <rule ref="rulesets/migrating.xml/ReplaceEnumerationWithIterator"/>
   <rule ref="rulesets/migrating.xml/AvoidEnumAsIdentifier"/>
   <rule ref="rulesets/migrating.xml/AvoidAssertAsIdentifier"/>
   <rule ref="rulesets/migrating.xml/IntegerInstantiation"/>
   <rule ref="rulesets/migrating.xml/ByteInstantiation"/>
   <rule ref="rulesets/migrating.xml/ShortInstantiation"/>
   <rule ref="rulesets/migrating.xml/LongInstantiation"/>
   <rule ref="rulesets/migrating.xml/JUnit4TestShouldUseBeforeAnnotation">
     <priority>5</priority>
   </rule>
   <rule ref="rulesets/migrating.xml/JUnit4TestShouldUseAfterAnnotation">
    <priority>5</priority>
   </rule>
   <rule ref="rulesets/migrating.xml/JUnit4TestShouldUseTestAnnotation">
	<priority>5</priority>
   </rule>
   <rule ref="rulesets/migrating.xml/JUnit4SuitesShouldUseSuiteAnnotation">
   	<priority>5</priority>
   </rule>
   <rule ref="rulesets/migrating.xml/JUnitUseExpected">
   	<priority>5</priority>
   </rule>
   <rule ref="rulesets/j2ee.xml/UseProperClassLoader"/>
   <rule ref="rulesets/j2ee.xml/MDBAndSessionBeanNamingConvention"/>
   <rule ref="rulesets/j2ee.xml/RemoteSessionInterfaceNamingConvention"/>
   <rule ref="rulesets/j2ee.xml/LocalInterfaceSessionNamingConvention"/>
   <rule ref="rulesets/j2ee.xml/LocalHomeNamingConvention"/>
   <rule ref="rulesets/j2ee.xml/RemoteInterfaceNamingConvention"/>
   <rule ref="rulesets/j2ee.xml/DoNotCallSystemExit"/>
   <rule ref="rulesets/j2ee.xml/StaticEJBFieldShouldBeFinal"/>
   <rule ref="rulesets/j2ee.xml/DoNotUseThreads"/>
   <rule ref="rulesets/optimizations.xml/LocalVariableCouldBeFinal">
     <priority>5</priority>
   </rule>
   <rule ref="rulesets/optimizations.xml/MethodArgumentCouldBeFinal"/>
   <rule ref="rulesets/optimizations.xml/AvoidInstantiatingObjectsInLoops">
     <priority>5</priority>
   </rule>
   <rule ref="rulesets/optimizations.xml/UseArrayListInsteadOfVector"/>
   <rule ref="rulesets/optimizations.xml/SimplifyStartsWith"/>
   <rule ref="rulesets/optimizations.xml/UseStringBufferForStringAppends">
     <priority>2</priority>
   </rule>
   <rule ref="rulesets/optimizations.xml/UseArraysAsList"/>
   <rule ref="rulesets/optimizations.xml/AvoidArrayLoops"/>
   <rule ref="rulesets/optimizations.xml/UnnecessaryWrapperObjectCreation"/>
   <rule ref="rulesets/optimizations.xml/AddEmptyString"/>
   <rule ref="rulesets/basic.xml/EmptyCatchBlock">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/EmptyIfStmt">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/EmptyWhileStmt">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/EmptyTryBlock">
      <priority>1</priority>
   </rule>
   <rule ref="rulesets/basic.xml/EmptyFinallyBlock">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/EmptySwitchStatements">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/JumbledIncrementer">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/ForLoopShouldBeWhileLoop">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/UnnecessaryConversionTemporary">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/OverrideBothEqualsAndHashcode">
      <priority>4</priority>
   </rule>
   <rule ref="rulesets/basic.xml/DoubleCheckedLocking"/>
   <rule ref="rulesets/basic.xml/ReturnFromFinallyBlock">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/EmptySynchronizedBlock"/>
   <rule ref="rulesets/basic.xml/UnnecessaryReturn">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/EmptyStaticInitializer">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/UnconditionalIfStatement">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/EmptyStatementNotInLoop"/>
   <rule ref="rulesets/basic.xml/BooleanInstantiation"/>
   <rule ref="rulesets/basic.xml/UnnecessaryFinalModifier">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/CollapsibleIfStatements"/>
   <rule ref="rulesets/basic.xml/UselessOverridingMethod">
      <priority>2</priority>
      <example><![CDATA[public void foo(String bar) {

    super.foo(bar);      //Why bother overriding?

}



public String foo() {

    return super.foo();  //Why bother overriding?

}



@Id

public Long getId() {

    return super.getId();  //OK if 'ignoreAnnotations' is false, which is the default behavior

}]]></example>
   </rule>
   <rule ref="rulesets/basic.xml/ClassCastExceptionWithToArray"/>
   <rule ref="rulesets/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/UselessOperationOnImmutable">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/MisplacedNullCheck">
      <priority>2</priority>
      <example><![CDATA[public class Foo {

 void bar() {

  if (a.equals(baz) && a != null) {}

 }

}



public class Foo {

 void bar() {

  if (a.equals(baz) || a == null) {}

 }

}]]></example>
   </rule>
   <rule ref="rulesets/basic.xml/UnusedNullCheckInEquals">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/AvoidThreadGroup">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/basic.xml/BrokenNullCheck"/>
   <rule ref="rulesets/basic.xml/BigIntegerInstantiation"/>
   <rule ref="rulesets/basic.xml/AvoidUsingOctalValues"/>
   <rule ref="rulesets/basic.xml/AvoidUsingHardCodedIP">
      <priority>1</priority>
   </rule>
   <rule ref="rulesets/basic.xml/CheckResultSet"/>
   <rule ref="rulesets/basic.xml/AvoidMultipleUnaryOperators">
      <priority>3</priority>
   </rule>
   <rule ref="rulesets/basic.xml/EmptyInitializer"/>
   <rule ref="rulesets/sunsecure.xml/MethodReturnsInternalArray"/>
   <rule ref="rulesets/sunsecure.xml/ArrayIsStoredDirectly"/>
   <rule ref="rulesets/coupling.xml/CouplingBetweenObjects"/>
   <rule ref="rulesets/coupling.xml/ExcessiveImports">
      <properties>
            <property name="minimum" value="45"/>
        </properties>
	  <priority>3</priority>
   </rule>
   <rule ref="rulesets/coupling.xml/LooseCoupling"/>
   <rule ref="rulesets/imports.xml/DuplicateImports">
     <priority>1</priority>
   </rule>
   <rule ref="rulesets/imports.xml/DontImportJavaLang">
    <priority>2</priority>
   </rule>
   <rule ref="rulesets/imports.xml/UnusedImports">
      <priority>1</priority>
   </rule>
   <rule ref="rulesets/imports.xml/ImportFromSamePackage"/>
   <rule ref="rulesets/imports.xml/TooManyStaticImports"/>
   <rule ref="rulesets/junit.xml/JUnitStaticSuite"/>
   <rule ref="rulesets/junit.xml/JUnitSpelling"/>
   <rule ref="rulesets/junit.xml/JUnitAssertionsShouldIncludeMessage"/>
   <rule ref="rulesets/junit.xml/JUnitTestsShouldIncludeAssert"/>
   <rule ref="rulesets/junit.xml/TestClassWithoutTestCases"/>
   <rule ref="rulesets/junit.xml/UnnecessaryBooleanAssertion"/>
   <rule ref="rulesets/junit.xml/UseAssertEqualsInsteadOfAssertTrue"/>
   <rule ref="rulesets/junit.xml/UseAssertSameInsteadOfAssertTrue"/>
   <rule ref="rulesets/junit.xml/UseAssertNullInsteadOfAssertTrue"/>
   <rule ref="rulesets/junit.xml/SimplifyBooleanAssertion"/>
   <rule ref="rulesets/controversial.xml/UnnecessaryConstructor"/>
   <rule ref="rulesets/controversial.xml/NullAssignment"/>
   <rule ref="rulesets/controversial.xml/OnlyOneReturn">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/controversial.xml/UnusedModifier"/>
   <rule ref="rulesets/controversial.xml/AssignmentInOperand"/>
   <rule ref="rulesets/controversial.xml/AtLeastOneConstructor"/>
   <rule ref="rulesets/controversial.xml/DontImportSun"/>
   <rule ref="rulesets/controversial.xml/SuspiciousOctalEscape"/>
   <rule ref="rulesets/controversial.xml/CallSuperInConstructor"/>
   <rule ref="rulesets/controversial.xml/UnnecessaryParentheses">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/controversial.xml/DefaultPackage"/>
   <rule ref="rulesets/controversial.xml/BooleanInversion"/>
   <rule ref="rulesets/controversial.xml/DataflowAnomalyAnalysis"/>
   <rule ref="rulesets/controversial.xml/AvoidFinalLocalVariable">
     <priority>5</priority>
   </rule>
   <rule ref="rulesets/controversial.xml/AvoidUsingShortType"/>
   <rule ref="rulesets/controversial.xml/AvoidUsingVolatile"/>
   <rule ref="rulesets/controversial.xml/AvoidUsingNativeCode"/>
   <rule ref="rulesets/controversial.xml/AvoidAccessibilityAlteration"/>
   <rule ref="rulesets/controversial.xml/DoNotCallGarbageCollectionExplicitly"/>
   <rule ref="rulesets/naming.xml/ShortVariable">
      <priority>3</priority>
   </rule>
   <rule ref="rulesets/naming.xml/LongVariable">
		<properties>
            <property name="minimum" value="45"/>
        </properties>
      <priority>3</priority>
   </rule>
   <rule ref="rulesets/naming.xml/ShortMethodName">
    <priority>3</priority>
   </rule>
   <rule ref="rulesets/naming.xml/VariableNamingConventions">
      <priority>1</priority>
   </rule>
   <rule ref="rulesets/naming.xml/MethodNamingConventions">
      <priority>1</priority>
   </rule>
   <rule ref="rulesets/naming.xml/ClassNamingConventions">
      <priority>1</priority>
   </rule>
   <rule ref="rulesets/naming.xml/AbstractNaming"/>
   <rule ref="rulesets/naming.xml/AvoidDollarSigns"/>
   <rule ref="rulesets/naming.xml/MethodWithSameNameAsEnclosingClass"/>
   <rule ref="rulesets/naming.xml/SuspiciousHashcodeMethodName"/>
   <rule ref="rulesets/naming.xml/SuspiciousHashcodeMethodName"/>
   <rule ref="rulesets/naming.xml/SuspiciousConstantFieldName"/>
   <rule ref="rulesets/naming.xml/SuspiciousEqualsMethodName"/>
   <rule ref="rulesets/naming.xml/AvoidFieldNameMatchingTypeName"/>
   <rule ref="rulesets/naming.xml/AvoidFieldNameMatchingMethodName"/>
   <rule ref="rulesets/naming.xml/NoPackage">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/naming.xml/PackageCase">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/naming.xml/MisleadingVariableName"/>
   <rule ref="rulesets/naming.xml/BooleanGetMethodName"/>
   <rule ref="rulesets/codesize.xml/NPathComplexity">
    <priority>5</priority>
	</rule>
	
   <rule ref="rulesets/codesize.xml/ExcessiveMethodLength">
      <priority>1</priority>
	   <properties>
            <property name="minimum" value="130"/>
        </properties>
   </rule>
   <rule ref="rulesets/codesize.xml/ExcessiveParameterList">
      <priority>2</priority>
	   <properties>
            <property name="minimum" value="7"/>
        </properties>
   </rule>
   <rule ref="rulesets/codesize.xml/ExcessiveClassLength">
      <priority>1</priority>
	  <properties>
            <property name="minimum" value="2000"/>
        </properties>
   </rule>
   <rule ref="rulesets/codesize.xml/CyclomaticComplexity">
      <priority>1</priority>
	 <properties>
            <property name="reportLevel" value="16"/>
        </properties>
   </rule>
   <rule ref="rulesets/codesize.xml/ExcessivePublicCount">
		<properties>
            <property name="minimum" value="45"/>
        </properties>
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/codesize.xml/TooManyFields">
   <priority>4</priority>
    </rule>
   <rule ref="rulesets/codesize.xml/NcssMethodCount">
   <priority>4</priority>
    </rule>
   <rule ref="rulesets/codesize.xml/NcssTypeCount">
   <priority>4</priority>
    </rule>
   <rule ref="rulesets/codesize.xml/NcssConstructorCount">
   <priority>4</priority>
    </rule>
   <rule ref="rulesets/codesize.xml/TooManyMethods">
   <properties>
            <property name="maxmethods" value="30"/>
        </properties>
   <priority>3</priority>
    </rule>
   <rule ref="rulesets/finalizers.xml/EmptyFinalizer"/>
   <rule ref="rulesets/finalizers.xml/FinalizeOnlyCallsSuperFinalize"/>
   <rule ref="rulesets/finalizers.xml/FinalizeOverloaded"/>
   <rule ref="rulesets/finalizers.xml/FinalizeDoesNotCallSuperFinalize"/>
   <rule ref="rulesets/finalizers.xml/FinalizeShouldBeProtected"/>
   <rule ref="rulesets/finalizers.xml/AvoidCallingFinalize"/>
   <rule ref="rulesets/logging-jakarta-commons.xml/UseCorrectExceptionLogging"/>
   <rule ref="rulesets/logging-jakarta-commons.xml/ProperLogger"/>
   <rule ref="rulesets/javabeans.xml/BeanMembersShouldSerialize">
   <priority>4</priority>
    </rule>
   <rule ref="rulesets/javabeans.xml/MissingSerialVersionUID">
   <priority>3</priority>
    </rule>
   <rule ref="rulesets/clone.xml/ProperCloneImplementation"/>
   <rule ref="rulesets/clone.xml/CloneThrowsCloneNotSupportedException">
      <priority>2</priority>
   </rule>
   <rule ref="rulesets/clone.xml/CloneMethodMustImplementCloneable">
      <priority>2</priority>
   </rule>
</ruleset>
